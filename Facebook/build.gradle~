buildscript {
ext {
springBootVersion = '1.3.0.M5'
}
repositories {
mavenCentral()
maven { url "https://repo.spring.io/snapshot" }
maven { url "https://repo.spring.io/milestone" }
}

dependencies {
classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
classpath("io.spring.gradle:dependency-management-plugin:0.4.1.RELEASE")
}

}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

jar {
baseName = 'doccismef'
version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
mavenCentral()
jcenter()
maven { url "http://jcenter.bintray.com" }
maven { url "https://repo.spring.io/snapshot" }
maven { url "https://repo.spring.io/milestone" }
}


dependencies {
compile("org.springframework.boot:spring-boot-devtools")
compile("org.springframework.boot:spring-boot-starter-thymeleaf")
compile("org.springframework.boot:spring-boot-starter-web")

compile("com.mangofactory:swagger-springmvc:1.0.0")

compile("org.json:json:20090211")
compile("joda-time:joda-time:2.1")
compile("javax.ws.rs:javax.ws.rs-api:2.0.1")
compile("javax.servlet:javax.servlet-api:3.1.0")

compile("org.apache.cxf:cxf-rt-frontend-jaxws:3.1.3")
compile("org.apache.cxf:cxf-rt-frontend-jaxrs:3.1.3")
compile("org.apache.cxf:cxf-rt-transports-http:3.1.3")
compile("org.apache.cxf:cxf-rt-transports-http-jetty:3.1.3")
compile("org.apache.cxf:cxf-rt-databinding-jaxb:3.1.3")
compile("org.apache.cxf:cxf-rt-rs-client:3.1.3")
compile("org.apache.cxf:cxf-rt-rs-service-description:3.1.3")
compile("org.apache.cxf:cxf-rt-rs-extension-providers:3.1.3")

compile("org.eclipse.jetty:jetty-webapp:9.2.10.v20150310")
compile("org.infinispan:infinispan-commons:7.1.1.Final")
compile("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.6.2")
compile("org.codehaus.jettison:jettison:1.3.7")

compile fileTree(dir: "libs", include: "*.jar")

providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}


eclipse {
classpath {
containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
}
}

//allows to choose jvm arguments with gradle bootRun -PjvmArgs="-Dwhatever1=value1 -Dwhatever2=value2"
bootRun {
if ( project.hasProperty('jvmArgs') ) {
jvmArgs project.jvmArgs.split('\\s+')
}
}

task wrapper(type: Wrapper) {
gradleVersion = '2.3'
}
